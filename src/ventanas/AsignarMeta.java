/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

/**
 *
 * @author moise
 */

import clases.Conexion;

import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.util.HashMap;

public class AsignarMeta extends javax.swing.JFrame {

   private JComboBox<String> comboMeta;
   private JComboBox<String> comboObstetra;
   private JButton btnAsignar;

   private HashMap<String, Integer> metasMap = new HashMap<>();
   private HashMap<String, Integer> obstetrasMap = new HashMap<>();

   /**
    * Creates new form AsignarMeta
    */
   public AsignarMeta() {
      initComponents();
      setTitle("Asignar Meta a Obstetra");
      setSize(400, 220);
      setLocationRelativeTo(null);
      setLayout(null);
      setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

      JLabel lblMeta = new JLabel("Seleccionar Meta:");
      lblMeta.setBounds(30, 30, 120, 25);
      add(lblMeta);

      comboMeta = new JComboBox<>();
      comboMeta.setBounds(160, 30, 180, 25);
      add(comboMeta);

      JLabel lblObstetra = new JLabel("Seleccionar Obstetra:");
      lblObstetra.setBounds(30, 70, 140, 25);
      add(lblObstetra);

      comboObstetra = new JComboBox<>();
      comboObstetra.setBounds(160, 70, 180, 25);
      add(comboObstetra);

      btnAsignar = new JButton("Asignar");
      btnAsignar.setBounds(130, 120, 120, 30);
      add(btnAsignar);

      btnAsignar.addActionListener(e -> asignarMeta());

      cargarCombos();
   }

   private void cargarCombos() {
      try {
         Connection cn = Conexion.conectar();

         // Cargar metas
         PreparedStatement pst1 = cn.prepareStatement("SELECT id, nombre FROM metas");
         ResultSet rs1 = pst1.executeQuery();
         while (rs1.next()) {
            String nombre = rs1.getString("nombre");
            int id = rs1.getInt("id");
            comboMeta.addItem(nombre);
            metasMap.put(nombre, id);
         }

         // Cargar obstetras
         PreparedStatement pst2 = cn.prepareStatement("SELECT id, nombre_obstetra FROM obstetras");
         ResultSet rs2 = pst2.executeQuery();
         while (rs2.next()) {
            String nombre = rs2.getString("nombre_obstetra");
            int id = rs2.getInt("id");
            comboObstetra.addItem(nombre);
            obstetrasMap.put(nombre, id);
         }

         cn.close();

      } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error al cargar listas.");
         e.printStackTrace();
      }
   }

   private void asignarMeta() {
      String metaSeleccionada = (String) comboMeta.getSelectedItem();
      String obstetraSeleccionado = (String) comboObstetra.getSelectedItem();

      if (metaSeleccionada == null || obstetraSeleccionado == null) {
         JOptionPane.showMessageDialog(this, "Debes seleccionar una meta y un obstetra.");
         return;
      }

      int idMeta = metasMap.get(metaSeleccionada);
      int idObstetra = obstetrasMap.get(obstetraSeleccionado);

      try {
         Connection cn = Conexion.conectar();
         PreparedStatement pst = cn.prepareStatement(
               "INSERT INTO meta_obstetra (id_meta, id_obstetra, cantidad_avance) VALUES (?, ?, 0)");
         pst.setInt(1, idMeta);
         pst.setInt(2, idObstetra);
         pst.executeUpdate();
         cn.close();

         JOptionPane.showMessageDialog(this, "Meta asignada correctamente.");
         dispose();

      } catch (SQLIntegrityConstraintViolationException ex) {
         JOptionPane.showMessageDialog(this, "Esta meta ya est√° asignada a ese obstetra.");
      } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error al asignar meta.");
         e.printStackTrace();
      }
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated
   // Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 400, Short.MAX_VALUE));
      layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGap(0, 300, Short.MAX_VALUE));

      pack();
   }// </editor-fold>//GEN-END:initComponents

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
      // (optional) ">
      /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the default
       * look and feel.
       * For details see
       * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(AsignarMeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(AsignarMeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(AsignarMeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(AsignarMeta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      // </editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new AsignarMeta().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   // End of variables declaration//GEN-END:variables
}
