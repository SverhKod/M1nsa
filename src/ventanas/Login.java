/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.sql.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.Random;
import clases.Conexion;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JCheckBox;
import java.util.prefs.Preferences;

/**
 *
 * @author Windows
 */
public class Login extends javax.swing.JFrame {

    public static String user = "";
    String pass = "";
    private int intentos = 3; // Número de intentos permitidos

    //Preferencias para guardar el usuario y contraseña
    private Preferences prefs = Preferences.userNodeForPackage(Login.class);

    // Variable para almacenar el texto del CAPTCHA
    private String captchaText;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        txt_intentos.setText("Numero de intentos: " + intentos);
        setResizable(false);
        setTitle("Acceso al sistema");
        setLocationRelativeTo(null);

        // Inicializar el CAPTCHA
        captchaText = generateCaptchaText();  // Generar texto aleatorio para el CAPTCHA
        drawCaptcha();  // Dibujar el CAPTCHA en el panel

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(), jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));

        jLabel_Wallpaper.setIcon(icono);
        this.repaint();

        ImageIcon wallpaper_logo = new ImageIcon("src/images/DS.png");
        Icon icono_logo = new ImageIcon(wallpaper_logo.getImage().getScaledInstance(jLabel_Logo.getWidth(), jLabel_Logo.getHeight(), Image.SCALE_DEFAULT));

        jLabel_Logo.setIcon(icono_logo);
        this.repaint();

        //Verificar si la opción de "Recordar Contraseña" está marcada
        if (prefs.getBoolean("recordar", false)) {
            txt_user.setText(prefs.get("usuario", ""));
            txt_password.setText(prefs.get("contraseña", ""));
            chkRecordarContraseña.setSelected(true);
        }
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    // Método que genera un texto de CAPTCHA aleatorio
    private String generateCaptchaText() {
        Random random = new Random();
        StringBuilder captcha = new StringBuilder();
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890";
        for (int i = 0; i < 5; i++) {
            int index = random.nextInt(characters.length());
            captcha.append(characters.charAt(index));
        }
        return captcha.toString();
    }

    // Método para dibujar el CAPTCHA en el panel
    private void drawCaptcha() {
        // Crear la imagen del CAPTCHA
        BufferedImage captchaImage = new BufferedImage(150, 50, BufferedImage.TYPE_INT_RGB);
        Graphics g = captchaImage.getGraphics();

        // Fondo blanco
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, 150, 50);

        // Dibuja el texto del CAPTCHA con una fuente aleatoria
        Random random = new Random();
        g.setColor(new Color(random.nextInt(255), random.nextInt(255), random.nextInt(255))); // Color aleatorio
        g.setFont(new Font("Tahoma", Font.BOLD, 25));
        g.drawString(captchaText, 34, 22);

        // Añadir líneas de ruido
        for (int i = 0; i < 10; i++) {
            g.setColor(new Color(random.nextInt(255), random.nextInt(255), random.nextInt(255)));
            g.drawLine(random.nextInt(160), random.nextInt(60), random.nextInt(160), random.nextInt(60));
        }

        g.dispose();

        // Mostrar la imagen en el panel
        JLabel captchaLabel = new JLabel(new ImageIcon(captchaImage));
        panelCaptcha.removeAll();  // Limpiar el panel
        panelCaptcha.add(captchaLabel);  // Añadir la nueva imagen del CAPTCHA
        panelCaptcha.revalidate();
        panelCaptcha.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Logo = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        jButton_Acceder = new javax.swing.JButton();
        jLabel_Footer = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        txt_captcha = new javax.swing.JTextField();
        txt_intentos = new javax.swing.JLabel();
        chkRecordarContraseña = new javax.swing.JCheckBox();
        btnPoliticaPrivacidad = new javax.swing.JButton();
        panelCaptcha = new javax.swing.JPanel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Logo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel_Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 270, 270));

        txt_user.setBackground(new java.awt.Color(153, 153, 255));
        txt_user.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        txt_user.setForeground(new java.awt.Color(255, 255, 255));
        txt_user.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_user.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_userActionPerformed(evt);
            }
        });
        getContentPane().add(txt_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 210, -1));

        jButton_Acceder.setBackground(new java.awt.Color(255, 102, 102));
        jButton_Acceder.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jButton_Acceder.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Acceder.setText("Acceder");
        jButton_Acceder.setBorder(null);
        jButton_Acceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AccederActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Acceder, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, 210, 35));

        jLabel_Footer.setBackground(new java.awt.Color(0, 0, 0));
        jLabel_Footer.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel_Footer.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Footer.setText("Creado por Grupo 6 del Curso Integrador: Sistemas I©");
        getContentPane().add(jLabel_Footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 630, -1, -1));

        txt_password.setBackground(new java.awt.Color(153, 153, 255));
        txt_password.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        txt_password.setForeground(new java.awt.Color(255, 255, 255));
        txt_password.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 210, -1));

        txt_captcha.setBackground(new java.awt.Color(255, 204, 153));
        txt_captcha.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        txt_captcha.setForeground(new java.awt.Color(51, 51, 51));
        txt_captcha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_captcha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_captcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_captchaActionPerformed(evt);
            }
        });
        getContentPane().add(txt_captcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 110, -1));

        txt_intentos.setFont(new java.awt.Font("Verdana Pro Cond", 1, 18)); // NOI18N
        txt_intentos.setForeground(new java.awt.Color(255, 255, 255));
        txt_intentos.setText("Numero de Intentos: ");
        getContentPane().add(txt_intentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        chkRecordarContraseña.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        chkRecordarContraseña.setForeground(new java.awt.Color(255, 255, 255));
        chkRecordarContraseña.setText("Recordar Contraseña");
        chkRecordarContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRecordarContraseñaActionPerformed(evt);
            }
        });
        getContentPane().add(chkRecordarContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 508, 210, 20));

        btnPoliticaPrivacidad.setBackground(new java.awt.Color(255, 255, 255));
        btnPoliticaPrivacidad.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnPoliticaPrivacidad.setForeground(new java.awt.Color(0, 0, 0));
        btnPoliticaPrivacidad.setText("Politica Privacidad");
        btnPoliticaPrivacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPoliticaPrivacidadActionPerformed(evt);
            }
        });
        getContentPane().add(btnPoliticaPrivacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 600, 210, -1));

        panelCaptcha.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(panelCaptcha, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 90, 40));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_userActionPerformed

    private void jButton_AccederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AccederActionPerformed
        // TODO add your handling code here:
        user = txt_user.getText().trim();
        pass = txt_password.getText().trim();

        String captchaInput = txt_captcha.getText().trim(); // El campo donde el usuario escribe el CAPTCHA

        // Verificar si el CAPTCHA ingresado es correcto
        if (!captchaInput.equals(captchaText)) {
            JOptionPane.showMessageDialog(null, "Captcha incorrecto. Intenta de nuevo.");
            captchaText = generateCaptchaText();  // Generar un nuevo CAPTCHA
            drawCaptcha();  // Redibujar el CAPTCHA
            txt_captcha.setText("");
            return; // Si el CAPTCHA no es correcto, no continuar con el login
        }

        if (!user.equals("") || !pass.equals("")) {
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select tipo_nivel, estatus from usuarios where username = '" + user
                        + "' and password = '" + pass + "' ");

                ResultSet rs = pst.executeQuery();
                if (rs.next()) {

                    String tipo_nivel = rs.getString("tipo_nivel");
                    String estatus = rs.getString("estatus");

                    if (tipo_nivel.equalsIgnoreCase("Administrador") && estatus.equalsIgnoreCase("Activo")) {
                        dispose();
                        new Administrador().setVisible(true);

                    } else if (tipo_nivel.equalsIgnoreCase("Obstetra") && estatus.equalsIgnoreCase("Activo")) {
                        dispose();
                        new Obstetra().setVisible(true);
                    } else{
                        JOptionPane.showMessageDialog(null, "Usuario inactivo");
                    }

                    //Si la casilla "Recordar contraseña" está seleccionada, guardar los datos
                    if (chkRecordarContraseña.isSelected()) {
                        prefs.put("usuario", user);
                        prefs.put("contraseña", pass);
                        prefs.putBoolean("recordar", true);
                    } else {
                        prefs.remove("usuario");
                        prefs.remove("contraseña");
                        prefs.putBoolean("recordar", false);
                    }
                } else {
                    intentos--;
                    txt_intentos.setText("Numero de intentos: " + intentos);
                    JOptionPane.showMessageDialog(null, "Datos de acceso incorrectos");
                    if (intentos == 0) {
                        JOptionPane.showMessageDialog(null, "Has alcanzado el límite de intentos. El programa se cerrará.");
                        System.exit(0);  // Cerrar la aplicación
                    }
                    txt_user.setText("");
                    txt_password.setText("");
                }

            } catch (SQLException e) {
                System.err.println("Error en el boton Acceder" + e);
                JOptionPane.showMessageDialog(null, "Error al iniciar sesion, contacte al administrador");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
        }
    }//GEN-LAST:event_jButton_AccederActionPerformed

    private void txt_captchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_captchaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_captchaActionPerformed

    private void chkRecordarContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRecordarContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRecordarContraseñaActionPerformed

    private void btnPoliticaPrivacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPoliticaPrivacidadActionPerformed
        // TODO add your handling code here:
        // Crear el mensaje de la política de privacidad
        String politicaPrivacidad = "Política de Privacidad\n\n"
                + "1. Recopilamos tu nombre de usuario y contraseña para proporcionarte acceso seguro a la aplicación.\n"
                + "2. Tu contraseña es almacenada de forma segura y no es accesible a terceros.\n"
                + "3. No compartimos tu información personal con ninguna entidad externa.\n"
                + "4. Tienes derecho a eliminar o modificar tus datos de acceso en cualquier momento.\n\n"
                + "Al usar esta aplicación, aceptas nuestra política de privacidad.";

        // Mostrar el mensaje en un cuadro de diálogo
        JOptionPane.showMessageDialog(this, politicaPrivacidad, "Política de Privacidad", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnPoliticaPrivacidadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPoliticaPrivacidad;
    private javax.swing.JCheckBox chkRecordarContraseña;
    private javax.swing.JButton jButton_Acceder;
    private javax.swing.JLabel jLabel_Footer;
    private javax.swing.JLabel jLabel_Logo;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JPanel panelCaptcha;
    private javax.swing.JTextField txt_captcha;
    private javax.swing.JLabel txt_intentos;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
}
